<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">conv</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">conv</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="warning" file="Xst" num="1610" delta="old" >&quot;<arg fmt="%s" index="1">C:/Users/Samuel/Desktop/Ventilador/ADC.vhd</arg>&quot; line <arg fmt="%d" index="2">109</arg>: Width mismatch. &lt;<arg fmt="%s" index="3">volt</arg>&gt; has a width of <arg fmt="%d" index="4">24</arg> bits but assigned expression is <arg fmt="%d" index="5">26</arg>-bit wide.
</msg>

<msg type="warning" file="Xst" num="1610" delta="old" >&quot;<arg fmt="%s" index="1">C:/Users/Samuel/Desktop/Ventilador/ADC.vhd</arg>&quot; line <arg fmt="%d" index="2">112</arg>: Width mismatch. &lt;<arg fmt="%s" index="3">volt</arg>&gt; has a width of <arg fmt="%d" index="4">24</arg> bits but assigned expression is <arg fmt="%d" index="5">26</arg>-bit wide.
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">ROM</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">gan</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">conv&lt;33:16&gt;</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">conv&lt;1:0&gt;</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="643" delta="old" >&quot;<arg fmt="%s" index="1">C:/Users/Samuel/Desktop/Ventilador/ADC.vhd</arg>&quot; line <arg fmt="%d" index="2">112</arg>: The result of a <arg fmt="%d" index="3">14</arg>x<arg fmt="%d" index="4">12</arg>-bit multiplication is partially used. Only the <arg fmt="%d" index="5">24</arg> least significant bits are used. If you are doing this on purpose, you may safely ignore this warning. Otherwise, make sure you are not losing information, leading to unexpected circuit behavior.
</msg>

<msg type="warning" file="Xst" num="643" delta="old" >&quot;<arg fmt="%s" index="1">C:/Users/Samuel/Desktop/Ventilador/ADC.vhd</arg>&quot; line <arg fmt="%d" index="2">109</arg>: The result of a <arg fmt="%d" index="3">14</arg>x<arg fmt="%d" index="4">12</arg>-bit multiplication is partially used. Only the <arg fmt="%d" index="5">24</arg> least significant bits are used. If you are doing this on purpose, you may safely ignore this warning. Otherwise, make sure you are not losing information, leading to unexpected circuit behavior.
</msg>

<msg type="warning" file="Xst" num="647" delta="old" >Input &lt;<arg fmt="%s" index="1">H4</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="647" delta="old" >Input &lt;<arg fmt="%s" index="1">H5</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="647" delta="old" >Input &lt;<arg fmt="%s" index="1">H6</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="647" delta="old" >Input &lt;<arg fmt="%s" index="1">H7</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="1780" delta="old" >Signal &lt;<arg fmt="%s" index="1">q</arg>&gt; is never used or assigned. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1780" delta="old" >Signal &lt;<arg fmt="%s" index="1">clkdiv</arg>&gt; is never used or assigned. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1781" delta="old" >Signal &lt;<arg fmt="%s" index="1">ROM</arg>&gt; is used but never assigned. Tied to default value.
</msg>

<msg type="info" file="Xst" num="1767" delta="old" >HDL ADVISOR - Resource sharing has identified that some arithmetic operations in this design can share the same physical resources for reduced device utilization. For improved clock frequency you may try to disable resource sharing.
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">a_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">MODULO_2</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">3 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;a_9&gt; &lt;a_10&gt; &lt;a_11&gt; </arg>
</msg>

<msg type="warning" file="Xst" num="1426" delta="old" >The value init of the FF/Latch <arg fmt="%s" index="1">enable</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">MODULO_1</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">a_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">MODULO_2</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="info" file="Xst" num="2385" delta="old" >HDL ADVISOR - You can improve the performance of the multiplier <arg fmt="%s" index="1">Mmult_volt_mult0003</arg> by adding <arg fmt="%d" index="2">1</arg> register level(s).
</msg>

<msg type="info" file="Xst" num="2385" delta="old" >HDL ADVISOR - You can improve the performance of the multiplier <arg fmt="%s" index="1">Mmult_volt_mult0002</arg> by adding <arg fmt="%d" index="2">1</arg> register level(s).
</msg>

<msg type="warning" file="Xst" num="1426" delta="old" >The value init of the FF/Latch <arg fmt="%s" index="1">enable</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">ADC</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">a_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">PWM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">a_9</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">PWM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">a_10</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">PWM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">a_11</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">PWM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">vnoc_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ADC</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">vnoc_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ADC</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">vnoc_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ADC</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">vnoc_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ADC</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">vnoc_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ADC</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">vnoc_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ADC</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">vnoc_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ADC</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">vnoc_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ADC</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">vnoc_8</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ADC</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">vnoc_9</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ADC</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">vnoc_10</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ADC</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">vnoc_11</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ADC</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">vnoc_12</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">ADC</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1293" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">LCD_RW</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">LCD</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">MODULO_1/volt1_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">Ventilador</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">MODULO_1/volt1_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">Ventilador</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">MODULO_1/volt1_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">Ventilador</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">MODULO_1/volt1_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">Ventilador</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">MODULO_1/volt1_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">Ventilador</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">MODULO_1/volt1_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">Ventilador</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">MODULO_1/volt_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">Ventilador</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">MODULO_1/volt_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">Ventilador</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">MODULO_1/volt_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">Ventilador</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">MODULO_1/volt_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">Ventilador</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">MODULO_1/volt_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">Ventilador</arg>&gt;.
</msg>

</messages>

